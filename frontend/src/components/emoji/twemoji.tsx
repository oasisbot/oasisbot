import React from 'react'
import twemoji from 'twemoji'

export interface TwemojiProps {
	emoji: string
}

const Twemoji = ({ emoji }: TwemojiProps) => (
	<span
		dangerouslySetInnerHTML={{
			__html: twemoji.parse(emoji, {
				folder: 'svg',
				ext: '.svg',
			}),
		}}
	/>
)

export const mapToUnicode = (item: string): string => {
	if (item.startsWith('regional')) {
		switch (item) {
			case 'regional_indicator_a':
				return 'ğŸ‡¦'
			case 'regional_indicator_b':
				return 'ğŸ‡§'
			case 'regional_indicator_c':
				return 'ğŸ‡¨'
			case 'regional_indicator_d':
				return 'ğŸ‡©'
			case 'regional_indicator_e':
				return 'ğŸ‡ª'
			case 'regional_indicator_f':
				return 'ğŸ‡«'
			case 'regional_indicator_g':
				return 'ğŸ‡¬'
			case 'regional_indicator_h':
				return 'ğŸ‡­'
			case 'regional_indicator_i':
				return 'ğŸ‡®'
			case 'regional_indicator_j':
				return 'ğŸ‡¯'
			case 'regional_indicator_k':
				return 'ğŸ‡°'
			case 'regional_indicator_l':
				return 'ğŸ‡±'
			case 'regional_indicator_m':
				return 'ğŸ‡²'
			case 'regional_indicator_n':
				return 'ğŸ‡³'
			case 'regional_indicator_o':
				return 'ğŸ‡´'
			case 'regional_indicator_p':
				return 'ğŸ‡µ'
			case 'regional_indicator_q':
				return 'ğŸ‡¶'
			case 'regional_indicator_r':
				return 'ğŸ‡·'
			case 'regional_indicator_s':
				return 'ğŸ‡¸'
			case 'regional_indicator_t':
				return 'ğŸ‡¹'
			case 'regional_indicator_u':
				return 'ğŸ‡º'
			case 'regional_indicator_v':
				return 'ğŸ‡»'
			case 'regional_indicator_w':
				return 'ğŸ‡¼'
			case 'regional_indicator_x':
				return 'ğŸ‡½'
			case 'regional_indicator_y':
				return 'ğŸ‡¾'
			case 'regional_indicator_z':
				return 'ğŸ‡¿'
		}
	}

	return item
}

export default React.memo(Twemoji)
